@model veterans_site.Models.Consultation
@using veterans_site.Extensions

@{
    ViewData["Title"] = "Деталі консультації";
}

<div class="container mt-5">
    <div class="card shadow-sm">
        <div class="card-body">

            <div class="row">
                <div class="col-md-8">
                    <h1 class="h2 mb-4">@Model.Title</h1>

                    <div class="mb-4">
                        <h5 class="text-muted mb-3">Опис консультації</h5>
                        <p>@Model.Description</p>
                    </div>

                    <div class="row mb-4">
                        <div class="col-md-6">
                            <h5 class="text-muted mb-3">Основна інформація</h5>
                            <ul class="list-unstyled">
                                <li class="mb-2">
                                    <i class="far fa-calendar-alt"></i>
                                    <strong>Дата та час:</strong> @Model.DateTime.ToString("dd.MM.yyyy HH:mm")
                                </li>
                                <li class="mb-2">
                                    <i class="far fa-clock"></i>
                                    <strong>Тривалість:</strong> @Model.Duration хв
                                </li>
                                <li class="mb-2">
                                    <i class="fas fa-tag"></i>
                                    <strong>Тип:</strong> @Model.Type.GetDisplayName()
                                </li>
                                <li class="mb-2">
                                    <i class="fas fa-users"></i>
                                    <strong>Формат:</strong> @Model.Format.GetDisplayName()
                                </li>
                                <li class="mb-2">
                                    <i class="fas fa-desktop"></i>
                                    <strong>Формат проведення:</strong> @Model.Mode.GetDisplayName()
                                </li>
                                @if (Model.Mode == ConsultationMode.Offline)
                                {
                                    <li class="mb-2">
                                        <i class="fas fa-map-marker-alt"></i>
                                        <strong>Місце проведення:</strong> @Model.Location
                                    </li>
                                }
                                <li class="mb-2">
                                    <i class="fas fa-money-bill-wave"></i>
                                    <strong>Ціна:</strong> @Model.Price.ToString("C")
                                </li>
                            </ul>
                        </div>

                        <div class="col-md-6">
                            <h5 class="text-muted mb-3">Додаткова інформація</h5>
                            <ul class="list-unstyled">
                                @if (Model.Format == ConsultationFormat.Group)
                                {
                                    <li class="mb-2">
                                        <i class="fas fa-users"></i>
                                        <strong>Максимум учасників:</strong> @Model.MaxParticipants
                                    </li>
                                    <li class="mb-2">
                                        <i class="fas fa-user-check"></i>
                                        <strong>Зареєстровано учасників:</strong> @Model.BookedParticipants
                                    </li>
                                    <li class="mb-2">
                                        <i class="fas fa-user-plus"></i>
                                        <strong>Вільних місць:</strong> @(Model.MaxParticipants - Model.BookedParticipants)
                                    </li>
                                }
                                <li class="mb-2">
                                    <i class="fas fa-info-circle"></i>
                                    <strong>Статус консультації:</strong>
                                    <span class="badge @(Model.Status switch
                                    {
                                        ConsultationStatus.Planned => "bg-primary",
                                        ConsultationStatus.InProgress => "bg-success",
                                        ConsultationStatus.Completed => "bg-secondary",
                                        ConsultationStatus.Cancelled => "bg-danger",
                                        _ => "bg-secondary"
                                    })">
                                        @Model.Status.GetDisplayName()
                                    </span>
                                </li>
                            </ul>
                        </div>
                    </div>
                    @if (Model.Format == ConsultationFormat.Individual && Model.Slots.Any())
                    {
                        <div class="mt-4">
                            <h4>Слоти консультації</h4>
                            <div class="table-responsive">
                                <table class="table table-striped">
                                    <thead>
                                        <tr>
                                            <th>Час</th>
                                            <th>Статус</th>
                                            <th>Клієнт</th>
                                            <th>Дії</th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        @foreach (var slot in Model.Slots.OrderBy(s => s.DateTime))
                                        {
                                            <tr id="slot-@slot.Id">
                                                <td>@slot.DateTime.ToString("dd.MM.yyyy HH:mm")</td>
                                                <td>
                                                    @if (slot.IsBooked)
                                                    {
                                                        <span class="badge bg-success">Заброньовано</span>
                                                    }
                                                    else
                                                    {
                                                        <span class="badge bg-secondary">Вільно</span>
                                                    }
                                                </td>
                                                <td>
                                                    @if (slot.IsBooked && slot.User != null)
                                                    {
                                                        <div class="d-flex align-items-center gap-2">
                                                            <span>@slot.User.FirstName @slot.User.LastName</span>
                                                        </div>
                                                    }
                                                    else
                                                    {
                                                        <span>-</span>
                                                    }
                                                </td>
                                                <td>
                                                    @if (!slot.IsBooked)
                                                    {
                                                        <button type="button"
                                                                class="btn btn-danger btn-sm delete-slot"
                                                                data-slot-id="@slot.Id"
                                                                data-bs-toggle="tooltip"
                                                                title="Видалити слот">
                                                            <i class="fas fa-trash"></i>
                                                        </button>
                                                    }
                                                </td>
                                            </tr>
                                        }
                                    </tbody>
                                </table>
                            </div>
                        </div>
                    }
                    else if (Model.Format == ConsultationFormat.Group)
                    {
                        <div class="mt-4">
                            <div class="d-flex justify-content-between align-items-center mb-3">
                                <h4>Зареєстровані учасники</h4>
                                <div class="d-flex align-items-center gap-2">
                                    <span class="badge bg-primary">Всього місць: @Model.MaxParticipants</span>
                                    <span class="badge @(Model.BookedParticipants >= Model.MaxParticipants ? "bg-danger" : "bg-success")">
                                        Зайнято місць: @Model.BookedParticipants
                                    </span>
                                    <span class="badge bg-info">
                                        Вільно місць: @(Model.MaxParticipants - Model.BookedParticipants)
                                    </span>
                                </div>
                            </div>

                            @if (Model.Bookings != null && Model.Bookings.Any())
                            {
                                <div class="table-responsive">
                                    <table class="table table-striped">
                                        <thead>
                                            <tr>
                                                <th>№</th>
                                                <th>Ім'я та прізвище</th>
                                                <th>Email</th>
                                                <th>Дата реєстрації</th>
                                            </tr>
                                        </thead>
                                        <tbody>
                                            @{
                                                int index = 1;
                                            }
                                            @foreach (var booking in Model.Bookings.OrderBy(b => b.BookingTime))
                                            {
                                                <tr>
                                                    <td>@(index++)</td>
                                                    <td>
                                                        @if (booking.User != null)
                                                        {
                                                            <span>@booking.User.FirstName @booking.User.LastName</span>
                                                        }
                                                    </td>
                                                    <td>
                                                        @if (booking.User != null)
                                                        {
                                                            <div class="d-flex align-items-center gap-2">
                                                                <span>@booking.User.Email</span>
                                                            </div>
                                                        }
                                                    </td>
                                                    <td>@booking.BookingTime.ToString("dd.MM.yyyy HH:mm")</td>
                                                </tr>
                                            }
                                        </tbody>
                                    </table>
                                </div>
                            }
                            else
                            {
                                <div class="alert alert-info">
                                    Поки що немає зареєстрованих учасників.
                                </div>
                            }
                        </div>
                    }
                </div>
            </div>

            <div class="mt-4 d-flex gap-3">
                <a asp-action="Index" class="btn btn-secondary">Назад до списку</a>
                <a asp-action="Edit" asp-route-id="@Model.Id" class="btn btn-primary">Редагувати</a>
            </div>
        </div>
    </div>
</div>


@section Scripts {
    <script>
        var tooltipTriggerList = [].slice.call(document.querySelectorAll('[data-bs-toggle="tooltip"]'))
        var tooltipList = tooltipTriggerList.map(function (tooltipTriggerEl) {
            return new bootstrap.Tooltip(tooltipTriggerEl)
        });

        document.querySelectorAll('.delete-slot').forEach(button => {
            button.addEventListener('click', async function () {
                if (confirm('Ви впевнені, що хочете видалити цей слот?')) {
                    const slotId = this.getAttribute('data-slot-id');

                    try {
                        const response = await fetch('/Specialist/Consultation/DeleteSlot', {
                            method: 'POST',
                            headers: {
                                'Content-Type': 'application/json',
                                'RequestVerificationToken': document.querySelector('input[name="__RequestVerificationToken"]').value
                            },
                            body: JSON.stringify({ id: slotId })
                        });

                        const result = await response.json();

                        if (result.success) {
                            document.getElementById(`slot-${slotId}`).remove();
                            showAlert('success', 'Слот успішно видалено');
                        } else {
                            showAlert('danger', result.message);
                        }
                    } catch (error) {
                        console.error('Error:', error);
                        showAlert('danger', 'Виникла помилка при видаленні слоту');
                    }
                }
            });
        });

        async function cancelBooking(bookingId) {
            if (confirm('Ви впевнені, що хочете скасувати реєстрацію цього учасника?')) {
                try {
                    const response = await fetch('/Specialist/Consultation/CancelBooking', {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json',
                            'RequestVerificationToken': document.querySelector('input[name="__RequestVerificationToken"]').value
                        },
                        body: JSON.stringify({ id: bookingId })
                    });

                    const result = await response.json();

                    if (result.success) {
                        location.reload(); 
                    } else {
                        showAlert('danger', result.message || 'Виникла помилка при скасуванні реєстрації');
                    }
                } catch (error) {
                    console.error('Error:', error);
                    showAlert('danger', 'Виникла помилка при скасуванні реєстрації');
                }
            }
        }

        function showAlert(type, message) {
            const alert = document.createElement('div');
            alert.className = `alert alert-${type} alert-dismissible fade show mt-3`;
            alert.innerHTML = `
                                                    ${message}
                                                    <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
                                                `;
            document.querySelector('.table-responsive').insertAdjacentElement('beforebegin', alert);
        }
    </script>
}