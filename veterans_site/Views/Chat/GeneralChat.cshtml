@using Microsoft.AspNetCore.Identity
@inject UserManager<veterans_site.Models.ApplicationUser> UserManager
@model List<veterans_site.Models.ChatMessage>
@{
    ViewData["Title"] = "Загальний чат";
    var currentUserId = ViewBag.CurrentUserId;
    var currentUserRoles = ViewBag.CurrentUserRoles as List<string>;
}

<div class="container mt-4">
    <div class="row">
        <div class="col-md-12">
            <div class="card shadow">
                <div class="card-header bg-primary text-white d-flex justify-content-between align-items-center">
                    <div>
                        <h5 class="mb-0"><i class="fas fa-users me-2"></i>Загальний чат</h5>
                        <small>Спілкування для всіх користувачів Ветеран Хабу</small>
                    </div>
                    <a asp-controller="Chat" asp-action="Index" class="btn btn-light btn-sm">
                        <i class="fas fa-arrow-left me-1"></i> До списку чатів
                    </a>
                </div>
                <div class="card-body">
                    <div class="chat-container" style="height: 500px; overflow-y: auto; padding: 10px;">
                        <div id="messagesList">
                            @if (Model.Any())
                            {
                                foreach (var message in Model)
                                {
                                    bool isCurrentUser = message.SenderId == currentUserId;
                                    string alignClass = isCurrentUser ? "text-end" : "text-start";
                                    string bgClass = isCurrentUser ? "bg-primary text-white" : "bg-light";
                                    string timeClass = isCurrentUser ? "text-white-50" : "text-muted";

                                    <div class="message-container @alignClass mb-3" id="message-@message.Id">
                                        <div class="d-flex @(isCurrentUser ? "justify-content-end" : "")">
                                            @if (!isCurrentUser)
                                            {
                                                <div class="me-2">
                                                    @if (!string.IsNullOrEmpty(message.Sender.AvatarPath))
                                                    {
                                                        <img src="@Url.Content(message.Sender.AvatarPath)" class="rounded-circle" width="40" height="40" alt="@message.Sender.FirstName">
                                                    }
                                                    else
                                                    {
                                                        <div class="user-avatar" style="width: 40px; height: 40px; background-color: #2e51a2; display: flex; align-items: center; justify-content: center; border-radius: 50%;">
                                                            <span class="text-white">@message.Sender.FirstName[0]</span>
                                                        </div>
                                                    }
                                                </div>
                                            }
                                            <div style="max-width: 75%;">
                                                @if (!isCurrentUser)
                                                {
                                                    <div class="mb-1">
                                                        <strong>@message.Sender.FirstName @message.Sender.LastName</strong>
                                                        @{
                                                            var userRoles = await UserManager.GetRolesAsync(message.Sender);
                                                            var role = userRoles.FirstOrDefault();

                                                            switch (role)
                                                            {
                                                                case "Admin":
                                                                    role = "Адмін";
                                                                    break;
                                                                case "Veteran":
                                                                    role = "Ветеран";
                                                                    break;
                                                                case "Specialist":
                                                                    role = "Спеціаліст";
                                                                    break;
                                                                case "Volunteer":
                                                                    role = "Волонтер";
                                                                    break;
                                                            }
                                                        }
                                                        <span class="badge bg-secondary">@role</span>
                                                    </div>
                                                }
                                                <div class="message-content p-3 rounded @bgClass">
                                                    @if (message.IsDeleted)
                                                    {
                                                        <i class="text-muted fst-italic">Повідомлення видалено</i>
                                                    }
                                                    else
                                                    {
                                                        <div class="message-text">@message.Content</div>
                                                        @if (message.HasFile)
                                                        {
                                                            string fileIconClass = "fa-file";
                                                            switch (message.FileType)
                                                            {
                                                                case "image":
                                                                    <div class="mt-2">
                                                                        <a href="@message.FilePath" target="_blank">
                                                                            <img src="@message.FilePath" class="img-fluid rounded" style="max-height: 200px;" alt="@message.FileName" />
                                                                        </a>
                                                                    </div>
                                                                    break;
                                                                case "pdf":
                                                                    fileIconClass = "fa-file-pdf";
                                                                    break;
                                                                case "doc":
                                                                    fileIconClass = "fa-file-word";
                                                                    break;
                                                                case "excel":
                                                                    fileIconClass = "fa-file-excel";
                                                                    break;
                                                            }
                                                            
                                                            @if (message.FileType != "image")
                                                            {
                                                                <div class="mt-2">
                                                                    <a href="@message.FilePath" class="btn btn-sm @(isCurrentUser ? "btn-light" : "btn-primary")" target="_blank">
                                                                        <i class="fas @fileIconClass me-1"></i> @message.FileName
                                                                        <small>(@message.FileSize)</small>
                                                                    </a>
                                                                </div>
                                                            }
                                                        }
                                                    }
                                                    <div class="mt-1 small @timeClass">
                                                        @message.SentAt.ToString("HH:mm dd.MM.yyyy")
                                                        @if (message.IsEdited)
                                                        {
                                                            <span class="ms-1">(Редаговано)</span>
                                                        }
                                                    </div>
                                                </div>
                                                @if (isCurrentUser && !message.IsDeleted)
                                                {
                                                    <div class="mt-1 message-actions">
                                                        <div class="btn-group">
                                                            <button class="btn btn-sm btn-outline-secondary copy-message" data-id="@message.Id" title="Копіювати">
                                                                <i class="fas fa-copy"></i>
                                                            </button>
                                                            <button class="btn btn-sm btn-outline-secondary edit-message" data-id="@message.Id" title="Редагувати">
                                                                <i class="fas fa-edit"></i>
                                                            </button>
                                                            <button class="btn btn-sm btn-outline-danger delete-message" data-id="@message.Id" title="Видалити">
                                                                <i class="fas fa-trash"></i>
                                                            </button>
                                                        </div>
                                                    </div>
                                                }
                                                else if (!message.IsDeleted)
                                                {
                                                    <div class="mt-1 message-actions">
                                                        <div class="btn-group">
                                                            <button class="btn btn-sm btn-outline-secondary copy-message" data-id="@message.Id" title="Копіювати">
                                                                <i class="fas fa-copy"></i>
                                                            </button>
                                                        </div>
                                                    </div>
                                                }
                                            </div>
                                        </div>
                                    </div>
                                }
                            }
                            else
                            {
                                <div class="text-center text-muted my-5">
                                    <i class="fas fa-comments fa-3x mb-3"></i>
                                    <p>Поки що немає повідомлень. Будьте першим, хто почне розмову!</p>
                                </div>
                            }
                        </div>
                    </div>
                </div>
                <div class="card-footer bg-white">
                    <div class="input-group">
                        <div id="file-preview" class="d-none w-100 mb-2">
                            <div class="border rounded p-2 mb-2 d-flex justify-content-between align-items-center">
                                <div id="file-info">
                                    <i class="fas fa-file me-2"></i><span id="file-name"></span>
                                    <small class="text-muted" id="file-size"></small>
                                </div>
                                <button type="button" id="remove-file" class="btn btn-sm btn-outline-danger">
                                    <i class="fas fa-times"></i>
                                </button>
                            </div>
                            <div id="image-preview" class="d-none mb-2">
                                <img src="" class="img-fluid rounded" style="max-height: 150px;" />
                            </div>
                        </div>
                        <input type="file" id="file-upload" class="d-none" />
                        <button class="btn btn-outline-secondary" type="button" id="attach-file">
                            <i class="fas fa-paperclip"></i>
                        </button>
                        <input type="text" id="messageInput" class="form-control" placeholder="Введіть повідомлення...">
                        <button class="btn btn-primary" type="button" id="sendButton">
                            <i class="fas fa-paper-plane"></i> Надіслати
                        </button>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<div class="modal fade" id="editMessageModal" tabindex="-1" aria-labelledby="editMessageModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="editMessageModalLabel">Редагувати повідомлення</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <input type="hidden" id="editMessageId">
                <div class="mb-3">
                    <textarea class="form-control" id="editMessageContent" rows="3"></textarea>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Скасувати</button>
                <button type="button" class="btn btn-primary" id="saveEditButton">Зберегти</button>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script src="https://cdnjs.cloudflare.com/ajax/libs/microsoft-signalr/6.0.6/signalr.min.js"></script>
    <script>
        $(function() {
            const connection = new signalR.HubConnectionBuilder()
                .withUrl("/chatHub")
                .withAutomaticReconnect()
                .build();

            const currentUserId = '@ViewBag.CurrentUserId';
            let selectedFile = null;

            function scrollToBottom() {
                const chatContainer = $('.chat-container');
                chatContainer.scrollTop(chatContainer[0].scrollHeight);
            }

            scrollToBottom();

            function formatTime(date) {
                const d = new Date(date);
                const hours = d.getHours().toString().padStart(2, '0');
                const minutes = d.getMinutes().toString().padStart(2, '0');
                const day = d.getDate().toString().padStart(2, '0');
                const month = (d.getMonth() + 1).toString().padStart(2, '0');
                const year = d.getFullYear();

                return `${hours}:${minutes} ${day}.${month}.${year}`;
            }

            function getFileIconClass(fileType) {
                switch (fileType) {
                    case 'image': return 'fa-file-image';
                    case 'pdf': return 'fa-file-pdf';
                    case 'doc': return 'fa-file-word';
                    case 'excel': return 'fa-file-excel';
                    default: return 'fa-file';
                }
            }

            function createMessageElement(data) {
                const isCurrentUser = data.SenderId === currentUserId;
                const messageId = data.MessageId || 0;
                const alignClass = isCurrentUser ? "text-end" : "text-start";
                const bgClass = isCurrentUser ? "bg-primary text-white" : "bg-light";
                const timeClass = isCurrentUser ? "text-white-50" : "text-muted";

                let fileContent = '';
                if (data.FileUrl) {
                    if (data.FileType && data.FileType.startsWith('image/')) {
                        fileContent = `
                <div class="mt-2">
                    <a href="${data.FileUrl}" target="_blank">
                        <img src="${data.FileUrl}" class="img-fluid rounded" style="max-height: 200px;" alt="${data.FileName || 'Зображення'}" />
                    </a>
                </div>
            `;
                    } else {
                        const fileIconClass = getFileIconClass(data.FileType);
                        fileContent = `
                <div class="mt-2">
                    <a href="${data.FileUrl}" class="btn btn-sm ${isCurrentUser ? "btn-light" : "btn-primary"}" 
                       download="${data.FileName || 'file'}" target="_blank">
                        <i class="fas ${fileIconClass} me-1"></i> ${data.FileName || 'Файл'}
                        <small>${data.FileSize || ''}</small>
                    </a>
                </div>
            `;
                    }
                }

                const userInfo = !isCurrentUser ? `
                    <div class="mb-1">
                        <strong>${data.SenderName}</strong>
                        <span class="badge bg-secondary">
                            ${data.SenderInfo.role || "Користувач"}
                        </span>
                    </div>
                ` : '';

                const actionButtons = isCurrentUser ? `
        <div class="mt-1 message-actions">
            <div class="btn-group">
                <button class="btn btn-sm btn-outline-secondary copy-message" data-id="${messageId}" title="Копіювати">
                    <i class="fas fa-copy"></i>
                </button>
                <button class="btn btn-sm btn-outline-secondary edit-message" data-id="${messageId}" title="Редагувати">
                    <i class="fas fa-edit"></i>
                </button>
                <button class="btn btn-sm btn-outline-danger delete-message" data-id="${messageId}" title="Видалити">
                    <i class="fas fa-trash"></i>
                </button>
            </div>
        </div>
    ` : `
        <div class="mt-1 message-actions">
            <div class="btn-group">
                <button class="btn btn-sm btn-outline-secondary copy-message" data-id="${messageId}" title="Копіювати">
                    <i class="fas fa-copy"></i>
                </button>
            </div>
        </div>
    `;

                const avatarElement = !isCurrentUser ? `
            <div class="me-2">
                ${data.SenderAvatar ?
                    `<img src="${data.SenderAvatar}" class="rounded-circle" width="40" height="40" alt="${data.SenderName}">` :
                    `<div class="user-avatar" style="width: 40px; height: 40px; background-color: #2e51a2; display: flex; align-items: center; justify-content: center; border-radius: 50%;">
                        <span class="text-white">${data.SenderName ? data.SenderName[0] : '?'}</span>
                     </div>`
                }
            </div>
        ` : '';

                return `
            <div class="message-container ${alignClass} mb-3" id="message-${messageId}">
                <div class="d-flex ${isCurrentUser ? "justify-content-end" : ""}">
                    ${!isCurrentUser ? avatarElement : ''}
                    <div style="max-width: 75%;">
                        ${userInfo}
                        <div class="message-content p-3 rounded ${bgClass}">
                            <div class="message-text">${data.Content}</div>
                            ${fileContent}
                            <div class="mt-1 small ${timeClass}">
                                ${formatTime(data.SentAt)}
                            </div>
                        </div>
                        ${actionButtons}
                    </div>
                </div>
            </div>
        `;
            }

            $("#sendButton").click(function() {
                sendMessage();
            });

            $("#messageInput").keypress(function(e) {
                if (e.which === 13 && !e.shiftKey) {
                    e.preventDefault();
                    sendMessage();
                }
            });

            function sendMessage() {
                const message = $("#messageInput").val().trim();

                if (selectedFile) {
                    uploadFile(message);
                } else if (message) {
                    $("#messageInput").val('');

                    connection.invoke("SendPrivateMessage", "general-chat", message, null, null, null, null)
                        .catch(function(err) {
                            console.error(err.toString());
                            alert("Помилка при надсиланні повідомлення");
                            $("#messageInput").val(message);
                        });
                }
            }

            $("#attach-file").click(function() {
                $("#file-upload").click();
            });

            $("#file-upload").change(function(e) {
                const file = e.target.files[0];
                if (!file) return;

                if (file.size > 10 * 1024 * 1024) {
                    alert("Файл занадто великий. Максимальний розмір 10MB.");
                    $(this).val('');
                    return;
                }

                const allowedTypes = ['.jpg', '.jpeg', '.png', '.gif', '.pdf', '.doc', '.docx', '.xls', '.xlsx', '.txt'];
                const extension = '.' + file.name.split('.').pop().toLowerCase();

                if (!allowedTypes.includes(extension)) {
                    alert("Непідтримуваний формат файлу");
                    $(this).val('');
                    return;
                }

                selectedFile = file;
                $("#file-name").text(file.name);
                $("#file-size").text(formatFileSize(file.size));
                $("#file-preview").removeClass('d-none');

                if (file.type.startsWith('image/')) {
                    const reader = new FileReader();
                    reader.onload = function(e) {
                        $("#image-preview img").attr('src', e.target.result);
                        $("#image-preview").removeClass('d-none');
                    };
                    reader.readAsDataURL(file);
                } else {
                    $("#image-preview").addClass('d-none');
                }
            });

            $("#remove-file").click(function() {
                selectedFile = null;
                $("#file-upload").val('');
                $("#file-preview").addClass('d-none');
                $("#image-preview").addClass('d-none');
            });

            function formatFileSize(bytes) {
                const sizes = ['B', 'KB', 'MB', 'GB'];
                let order = 0;
                let size = bytes;

                while (size >= 1024 && order < sizes.length - 1) {
                    order++;
                    size = size / 1024;
                }

                return `${size.toFixed(2)} ${sizes[order]}`;
            }

            function uploadFile(message) {
                if (!selectedFile) return;

                const formData = new FormData();
                formData.append('file', selectedFile);

                const messageText = message;
                $("#messageInput").val('');

                $.ajax({
                    url: '/Chat/UploadFile',
                    type: 'POST',
                    data: formData,
                    processData: false,
                    contentType: false,
                    success: function(response) {
                        connection.invoke("SendPrivateMessage", "general-chat", messageText,
                            response.fileUrl, response.fileName, response.fileType, response.fileSize)
                            .catch(function(err) {
                                console.error(err.toString());
                                alert("Помилка при надсиланні повідомлення з файлом");
                                $("#messageInput").val(messageText);
                            });

                        selectedFile = null;
                        $("#file-upload").val('');
                        $("#file-preview").addClass('d-none');
                        $("#image-preview").addClass('d-none');
                    },
                    error: function(xhr) {
                        console.error(xhr);
                        alert(xhr.responseJSON?.error || "Помилка при завантаженні файлу");
                        $("#messageInput").val(messageText);
                    }
                });
            }

            $(document).on('click', '.edit-message', function() {
                const messageId = $(this).data('id');
                const content = $(`#message-${messageId} .message-text`).text().trim();

                $("#editMessageId").val(messageId);
                $("#editMessageContent").val(content);

                const editModal = new bootstrap.Modal(document.getElementById('editMessageModal'));
                editModal.show();
            });

            $("#saveEditButton").click(function() {
                const messageId = $("#editMessageId").val();
                const newContent = $("#editMessageContent").val().trim();

                if (newContent) {
                    connection.invoke("EditMessage", parseInt(messageId), newContent)
                        .catch(function(err) {
                            console.error(err.toString());
                            alert("Помилка при редагуванні повідомлення");
                        });

                    bootstrap.Modal.getInstance(document.getElementById('editMessageModal')).hide();
                }
            });

            $(document).on('click', '.delete-message', function() {
                if (confirm("Ви впевнені, що хочете видалити це повідомлення?")) {
                    const messageId = $(this).data('id');

                    connection.invoke("DeleteMessage", parseInt(messageId))
                        .catch(function(err) {
                            console.error(err.toString());
                            alert("Помилка при видаленні повідомлення");
                        });
                }
            });

            $(document).on('click', '.copy-message', function() {
                const messageId = $(this).data('id');
                const messageText = $(`#message-${messageId} .message-text`).text().trim();

                copyToClipboard(messageText);

                const originalHtml = $(this).html();
                $(this).html('<i class="fas fa-check"></i>');
                setTimeout(() => {
                    $(this).html(originalHtml);
                }, 1500);
            });

            function copyToClipboard(text) {
                if (navigator.clipboard) {
                    navigator.clipboard.writeText(text)
                        .catch(err => {
                            console.error('Помилка копіювання: ', err);
                            fallbackCopyToClipboard(text);
                        });
                } else {
                    fallbackCopyToClipboard(text);
                }
            }

            connection.on("ReceiveMessage", function(data) {
                console.log("Отримано повідомлення:", data);
                let messageData;

                if (typeof data === 'object' && data !== null) {
                    messageData = {
                        MessageId: data.MessageId || data.messageId || 0,
                        SenderId: data.SenderId || data.senderId || '',
                        SenderName: data.SenderName || data.senderName || '',
                        SenderAvatar: data.SenderAvatar || data.senderAvatar || '',
                        Content: data.Content || data.content || '',
                        SentAt: data.SentAt || data.sentAt || new Date(),
                        FileUrl: data.FileUrl || data.fileUrl || null,
                        FileName: data.FileName || data.fileName || null,
                        FileType: data.FileType || data.fileType || null,
                        FileSize: data.FileSize || data.fileSize || null,
                        SenderInfo: data.SenderInfo || data.senderInfo || {}
                    };
                } else {
                    messageData = {
                        MessageId: arguments[0],
                        SenderId: arguments[1],
                        SenderName: arguments[2],
                        SenderAvatar: arguments[3],
                        Content: arguments[4] || '',
                        SentAt: arguments[5] || new Date(),
                        FileUrl: arguments[6] || null,
                        FileName: arguments[7] || null,
                        FileType: arguments[8] || null,
                        FileSize: arguments[9] || null,
                        SenderInfo: arguments[10] || {}
                    };
                }

                messageData.SenderInfo = messageData.SenderInfo || {};
                if (!messageData.SenderInfo.role) {
                    messageData.SenderInfo.role = "Користувач";
                }

                if (messageData.SenderId === "general-chat" ||
                    (typeof messageData.FileUrl === 'string' &&
                        messageData.FileUrl.includes("general-chat"))) {
                    if (messageData.SenderId !== currentUserId) {
                        if (!window.location.href.includes('/Chat/GeneralChat')) {
                            generalChatUnreadCount++;
                            updateUnreadCountsDisplay();
                        }
                    }
                }

                if (window.location.href.includes('/Chat/GeneralChat')) {
                    connection.invoke("MarkGeneralChatMessagesAsRead")
                        .catch(function(err) {
                            console.error(err.toString());
                        });
                } else {
                    if (messageData.SenderId === "general-chat" ||
                        (typeof messageData.FileUrl === 'string' && messageData.FileUrl.includes("general-chat"))) {
                        if (messageData.SenderId !== currentUserId) {
                            generalChatUnreadCount++;
                            updateUnreadCountsDisplay();
                        }
                    }
                }

                const messageHtml = createMessageElement(messageData);
                $("#messagesList").append(messageHtml);
                scrollToBottom();
            });

            connection.on("MessageSent", function(messageId, receiverId, content, sentAt, fileUrl, fileName, fileType, fileSize) {
                console.log("Підтвердження відправки повідомлення:", messageId, receiverId);
            });

            connection.on("UpdateGeneralChatUnreadCount", function() {
                if (!window.location.href.includes('/Chat/GeneralChat')) {
                    fetchInitialUnreadCounts();
                }
            });

            connection.on("MessageEdited", function(messageId, newContent) {
                $(`#message-${messageId} .message-text`).text(newContent);
                if (!$(`#message-${messageId} .message-content small.edited-indicator`).length) {
                    $(`#message-${messageId} .message-content`).append('<small class="d-block text-muted mt-1 edited-indicator">(Редаговано)</small>');
                }
            });

            connection.on("MessageDeleted", function(messageId) {
                $(`#message-${messageId}`).remove();

                if ($("#messagesList").children().length === 0) {
                    $("#messagesList").html(`
            <div class="text-center text-muted my-5">
                <i class="fas fa-comments fa-3x mb-3"></i>
                <p>Поки що немає повідомлень. Будьте першим, хто почне розмову!</p>
            </div>
        `);
                }
            });

            async function startConnection() {
                try {
                    await connection.start();
                    console.log("SignalR підключено.");

                    await connection.invoke("RegisterConnection");

                    if (window.location.href.includes('/Chat/GeneralChat')) {
                        await connection.invoke("MarkGeneralChatMessagesAsRead");
                    }

                } catch (err) {
                    console.error("SignalR Connection Error:", err);
                    setTimeout(startConnection, 3000);
                }
            }

            startConnection();
        });
    </script>
}